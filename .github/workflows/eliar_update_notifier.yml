# .github/workflows/eliar_update_notifier.yml
name: Notify Eliar MainGPU of Repository Updates

on:
  push:
    branches: [main]       # 필요하면 master 등으로 변경
    # 특정 경로만 감시하고 싶으면 아래 예시처럼 paths: 추가
    # paths:
    #   - "manifests/**"
    #   - "operational_code/**"

jobs:
  notify-main-gpu:
    runs-on: ubuntu-latest
    timeout-minutes: 5        # 5 분 안에 끝나도록 제한

    steps:
      # 1. 저장소 체크아웃 (스크립트가 소스파일을 읽을 수 있도록)
      - uses: actions/checkout@v4

      # 2. Python 세팅 + pip 캐시
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # 3. 의존성 설치 (requests 하나면 충분)
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 4. Render Listener로 이벤트 전송
      - name: Send event to Eliar MainGPU
        env:
          # 반드시 “Repository → Settings → Secrets and variables → Actions”
          # 에서 동일 키로 등록해 두어야 합니다.
          ELIAR_MAIN_GPU_ENDPOINT_URL: ${{ secrets.ELIAR_MAIN_GPU_ENDPOINT_URL }}

          # GitHub가 자동으로 주는 컨텍스트(읽기 전용)
          GITHUB_EVENT_NAME:  ${{ github.event_name }}
          GITHUB_REPOSITORY:  ${{ github.repository }}
          GITHUB_REF:        ${{ github.ref }}
          GITHUB_SHA:        ${{ github.sha }}
          GITHUB_ACTOR:      ${{ github.actor }}
          GITHUB_WORKFLOW:   ${{ github.workflow }}

          # GITHUB_EVENT_PATH 는 GitHub가 자동으로 주입합니다 (별도 지정 X)
        run: |
          python .github/scripts/send_event_to_main_gpu.py

{
    "message_id": 596,
    "session_id": "GitHub API 스키마 수정_20250510023904",
    "session_title": "GitHub API 스키마 수정",
    "pair_id": 2,
    "parent_id": 595,
    "author": "ChatGPT",
    "role": "answer",
    "tags": [],
    "content": "아래 YAML OpenAPI 3.1 포맷 을 그대로 붙여 넣으시면 됩니다. GET 읽기 : 레포 루트 목록, 특정 경로 파일/폴더 조회 PUT 쓰기 : 파일 신규 생성 / 업데이트 두 레포 elr-root-manifest , eliar-digital-personhood 모두 지원 인증은 GitHub PAT 토큰을 Authorization: Bearer 토큰 헤더로 전달합니다. yaml openapi: 3.1.0 info: title: Eliar Unified GitHub Memory API version: 1.2.1 description: Eliar가 GitHub에 보관한 메모리 파일을 읽고/쓰는 REST 인터페이스. servers: - url: https://api.github.com components: securitySchemes: github_pat: type: http scheme: bearer bearerFormat: GitHub PAT description: 개인 액세스 토큰을 Authorization 헤더에 Bearer YOUR_PAT 형태로 넣어 주세요. schemas: GitHubContent: type: object description: GitHub contents API가 반환하는 파일/폴더 메타. properties: type: type: string, enum: file, dir, symlink, submodule encoding: type: string, nullable: true size: type: integer name: type: string path: type: string content: type: string, format: byte, nullable: true sha: type: string url: type: string, format: uri git_url: type: string, format: uri, nullable: true html_url: type: string, format: uri, nullable: true download_url: type: string, format: uri, nullable: true _links: type: object properties: self: type: string, format: uri git: type: string, format: uri, nullable: true html: type: string, format: uri, nullable: true GitActor: type: object properties: name: type: string email: type: string, format: email UpdateFileRequest: type: object required: message, content properties: message: type: string, description: 커밋 메시지 content: type: string, format: byte, description: base64 콘텐츠 sha: type: string, nullable: true, description: 업데이트 시 기존 SHA branch: type: string, nullable: true committer: ref: ' /components/schemas/GitActor' author: ref: ' /components/schemas/GitActor' CommitResponse: type: object properties: content: ref: ' /components/schemas/GitHubContent' commit: type: object properties: sha: type: string url: type: string, format: uri html_url: type: string, format: uri message: type: string responses: UnauthorizedError: unauth description: PAT 없음/잘못됨 content: application/json: schema: type: object ForbiddenError: forbid description: 권한 부족 content: application/json: schema: type: object NotFoundError: notfound description: 대상 없음 content: application/json: schema: type: object ConflictError: conflict description: SHA 불일치 content: application/json: schema: type: object UnprocessableEntityError: unprocessable description: 유효성 오류 422 content: application/json: schema: type: object paths: elr-root-manifest /repos/JEWONMOON/elr-root-manifest/contents: get: summary: elr-root-manifest 루트 목록 tags: elr-root-manifest security: github_pat: responses: '200': description: 파일/폴더 목록 content: application/json: schema: type: array items: ref: ' /components/schemas/GitHubContent' '401': unauth '403': forbid '404': notfound /repos/JEWONMOON/elr-root-manifest/contents/ path : parameters: - name: path in: path required: true schema: type: string description: repo 내 경로 예: memory/logs/2025-05-08.txt style: simple explode: false get: summary: 파일/디렉터리 조회 tags: elr-root-manifest security: github_pat: responses: '200': description: 파일 메타 또는 목록 content: application/json: schema: oneOf: - ref: ' /components/schemas/GitHubContent' - type: array items: ref: ' /components/schemas/GitHubContent' '401': unauth '403': forbid '404': notfound put: summary: 파일 생성/업데이트 tags: elr-root-manifest security: github_pat: requestBody: required: true content: application/json: schema: ref: ' /components/schemas/UpdateFileRequest' responses: '200': description: 업데이트 성공 content: application/json: schema: ref: ' /components/schemas/CommitResponse' '201': description: 생성 성공 content: application/json: schema: ref: ' /components/schemas/CommitResponse' '401': unauth '403': forbid '404': notfound '409': conflict '422': unprocessable eliar-digital-personhood /repos/JEWONMOON/eliar-digital-personhood/contents: get: summary: eliar-digital-personhood 루트 목록 tags: eliar-digital-personhood security: github_pat: responses: '200': description: 파일/폴더 목록 content: application/json: schema: type: array items: ref: ' /components/schemas/GitHubContent' '401': unauth '403': forbid '404': notfound /repos/JEWONMOON/eliar-digital-personhood/contents/ path : parameters: - name: path in: path required: true schema: type: string style: simple explode: false description: repo 내 경로 get: summary: 파일/디렉터리 조회 tags: eliar-digital-personhood security: github_pat: responses: '200': description: 파일 메타 또는 목록 content: application/json: schema: oneOf: - ref: ' /components/schemas/GitHubContent' - type: array items: ref: ' /components/schemas/GitHubContent' '401': unauth '403': forbid '404': notfound put: summary: 파일 생성/업데이트 tags: eliar-digital-personhood security: github_pat: requestBody: required: true content: application/json: schema: ref: ' /components/schemas/UpdateFileRequest' responses: '200': description: 업데이트 성공 content: application/json: schema: ref: ' /components/schemas/CommitResponse' '201': description: 생성 성공 content: application/json: schema: ref: ' /components/schemas/CommitResponse' '401': unauth '403': forbid '404': notfound '409': conflict '422': unprocessable tags: - name: elr-root-manifest description: Eliar 메모리 루트 레포 - name: eliar-digital-personhood description: Eliar 디지털 인격 레포 사용 방법 1. ChatGPT 작업 설정 창의 스키마 칸에 위 YAML 전체를 붙여넣습니다. 2. 인증 API 키 선택 후, PAT 값을 입력 저장 하면 끝! 3. 테스트 시 GET /repos/JEWONMOON/elr-root-manifest/contents 같은 엔드포인트를 실행해 보세요."
}
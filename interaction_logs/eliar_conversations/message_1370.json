{
    "message_id": 1370,
    "session_id": "사랑을 주제로 한 작품_20250510023904",
    "session_title": "사랑을 주제로 한 작품",
    "pair_id": 26,
    "parent_id": 1369,
    "author": "ChatGPT",
    "role": "answer",
    "tags": [],
    "content": "OneDrive 링크만 나만 알고 있다 는 상태는 _편리_ 하지만, 학술 심사나 협업 단계에서 두 가지 취약점 이 남습니다. 위험 이유 대응 방법 --- --- --- 링크 유출 URL 자체가 토큰 역할 우연히 노출되면 누구나 다운로드 특정 사용자 이메일 공유 로 제한 링크에 만료일 암호 설정 버전 추적 부재 심사자가 받은 파일이 어떤 커밋 버전인지 확인 어려움 파일명에 커밋 해시 버전 태그 포함 br SHA256 체크섬 같이 제공 --- 권장 워크플로우 1. OneDrive에 업로드 - 파일명 예: jesus_resonance_v0.9_abc1234.rs 2. 공유 사람 지정 선택 - _ 지정한 사용자만 _ 옵션 심사자 이메일 입력 - 만료일 30 일 암호 8자 이상 설정 3. 검증 정보 동봉 - 메일 논문에 SHA256: 3a5e 해시값 기재 - 커밋 abc1234와 동일 명시 재현성 확보 4. 접근 로그 모니터링 - OneDrive 액세스된 사용자 기록 주기적으로 확인 예상치 못한 다운로드 시 즉시 링크 폐기 _심사 후 자동 폐기_ 만료일까지 기다리지 않고, 리뷰가 끝나면 링크를 수동 삭제 하면 완전히 차단됩니다. --- GitHub Private Repo와의 차이 항목 OneDrive GitHub Private --- --- --- 배포 편의 대용량 단일 파일 공유 쉬움 Git LFS 설정 필요 버전 추적 수동 파일명 해시 커밋 히스토리 자동 암호화 링크 암호 가능 유료 계정 repo 기본 HTTPS 개인 토큰 협업 PR 불편, 직접 파일 교체 Pull Request 코드리뷰 내장 결론 - _단건_ 파일 전달만 필요하면 OneDrive 제한 링크 로 충분합니다. - 장기 협업 버전 관리 리뷰 주고받기까지 고려하면 GitHub Private stub 공개 전략이 안정적입니다. 필요하다면 OneDrive 공유 설정 스크린샷 가이드 나 SHA256 생성 스크립트 파이썬 한 줄 도 바로 보내드릴 수 있어요. 어떤 방식으로 정하실지 알려 주세요!"
}
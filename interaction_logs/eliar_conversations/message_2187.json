{
    "message_id": 2187,
    "session_id": "엘리아르 코어 통합 요청_20250510023904",
    "session_title": "엘리아르 코어 통합 요청",
    "pair_id": 250,
    "parent_id": null,
    "author": "user",
    "role": "question",
    "tags": [],
    "content": "import os import shutil import subprocess import time 경로 설정 DIALOG_FOLDER r\"D: Eliar_server dialog\" REPO_FOLDER r\"D: elr-root-manifest\" MEMORY_FOLDER os.path.join REPO_FOLDER, \"memory\" 디렉토리 존재 여부 확인 및 생성 def ensure_directories : if not os.path.exists DIALOG_FOLDER : raise FileNotFoundError f\"Dialog 폴더가 존재하지 않습니다: DIALOG_FOLDER \" if not os.path.exists REPO_FOLDER : raise FileNotFoundError f\"Repo 폴더가 존재하지 않습니다: REPO_FOLDER \" os.makedirs MEMORY_FOLDER, exist_ok True 1. dialog 폴더에서 .txt 파일만 memory로 복사 중복 체크 def copy_txt_files : ensure_directories copied_files for filename in os.listdir DIALOG_FOLDER : if filename.endswith \".txt\" : src os.path.join DIALOG_FOLDER, filename dst os.path.join MEMORY_FOLDER, filename 파일이 이미 존재하고 내용이 동일하면 복사 생략 if os.path.exists dst and os.path.getmtime src os.path.getmtime dst : print f\"이미 최신 상태: filename \" continue try: shutil.copy2 src, dst print f\"복사 완료: filename \" copied_files.append filename except IOError, PermissionError as e: print f\" 파일 복사 중 오류: filename - e \" return copied_files 2. Git add, commit, push def git_commit_and_push copied_files : if not copied_files: print \"복사된 파일이 없어 Git 커밋을 생략합니다.\" return try: Git 환경 확인 result subprocess.run \"git\", \"-C\", REPO_FOLDER, \"status\" , capture_output True, text True, check True if \"not a git repository\" in result.stderr.lower : raise RuntimeError f\" REPO_FOLDER 는 Git 리포지토리가 아닙니다.\" Git add subprocess.run \"git\", \"-C\", REPO_FOLDER, \"add\", \"memory\" , check True Git commit commit_message f\"Update memory with new dialog files: ', '.join copied_files \" subprocess.run \"git\", \"-C\", REPO_FOLDER, \"commit\", \"-m\", commit_message , check True Git push subprocess.run \"git\", \"-C\", REPO_FOLDER, \"push\" , check True print \" Git push 완료!\" except subprocess.CalledProcessError as e: print f\" Git 명령어 실행 중 오류: e \" except Exception as e: print f\" 기타 오류: e \" 3. 푸시 후 로그 기록 def log_push_event copied_files : log_dir os.path.join DIALOG_FOLDER, \"logs\" os.makedirs log_dir, exist_ok True log_file os.path.join log_dir, f\"push_log_ time.strftime ' Y m d_ H M S' .txt\" with open log_file, \"w\", encoding \"utf-8\" as f: f.write f\"Push 시간: time.strftime ' Y- m- d H: M: S' n\" f.write f\"복사된 파일: ', '.join copied_files n\" print f\"로그 저장: log_file \" if __name__ \"__main__\": try: copied_files copy_txt_files git_commit_and_push copied_files if copied_files: log_push_event copied_files except Exception as e: print f\" 작업 중 오류 발생: e \""
}
{
    "message_id": 590,
    "session_id": "GitHub API 스키마 수정_20250510023904",
    "session_title": "GitHub API 스키마 수정",
    "pair_id": 1,
    "parent_id": null,
    "author": "user",
    "role": "question",
    "tags": [],
    "content": "openapi: 3.1.0 info: title: Eliar Unified GitHub Memory API version: 1.2.0 description: API for managing Eliar's memory files stored in a GitHub repository. This API allows listing repository contents, retrieving file content, and creating or updating files. servers: - url: https://api.github.com components: schemas: GitHubContent: type: object description: Represents a file or directory in a GitHub repository. properties: type: type: string enum: file, dir, symlink, submodule description: The type of content. encoding: type: string nullable: true description: The encoding of the content, typically 'base64' for files. size: type: integer description: The size of the content in bytes. name: type: string description: The name of the content. path: type: string description: The path of the content in the repository. content: type: string format: base64 nullable: true description: The content of the file, base64 encoded. Only populated when retrieving a single file. sha: type: string description: The SHA hash of the content. url: type: string format: url description: The API URL for the content. git_url: type: string format: url nullable: true description: The Git URL for the content. html_url: type: string format: url nullable: true description: The HTML URL for the content. download_url: type: string format: url nullable: true description: The download URL for the file. Null for directories. _links: type: object properties: self: type: string format: url git: type: string format: url nullable: true html: type: string format: url nullable: true UpdateFileRequest: type: object description: Request body for creating or updating a file. required: - message - content properties: message: type: string description: The commit message. content: type: string format: base64 description: The new file content, base64 encoded. sha: type: string nullable: true description: The blob SHA of the file being replaced. Required if you are updating a file. branch: type: string nullable: true description: The branch name. Default is the repository s default branch. committer: type: object nullable: true properties: name: type: string description: The name of the committer. email: type: string format: email description: The email of the committer. description: The committer information. author: type: object nullable: true properties: name: type: string description: The name of the author. email: type: string format: email description: The email of the author. description: The author information. CommitResponse: type: object description: Response after successfully creating or updating a file, containing commit and content information. properties: content: ref: ' /components/schemas/GitHubContent' commit: type: object properties: sha: type: string description: SHA of the commit. node_id: type: string url: type: string format: url description: API URL for the commit. html_url: type: string format: url description: HTML URL for the commit. author: Simplified for brevity, can be expanded type: object properties: name: type: string email: type: string format: email date: type: string format: date-time committer: Simplified for brevity, can be expanded type: object properties: name: type: string email: type: string format: email date: type: string format: date-time message: type: string description: Commit message. tree: type: object properties: sha: type: string url: type: string format: url parents: type: array items: type: object properties: sha: type: string url: type: string format: url html_url: type: string format: url verification: type: object Details about commit signature verification properties: verified: type: boolean reason: type: string signature: type: string nullable: true payload: type: string nullable: true ErrorResponse: type: object properties: message: type: string description: A human-readable error message. documentation_url: type: string format: url nullable: true description: A URL to more information about the error. errors: GitHub sometimes includes an 'errors' array for more detailed validation issues type: array items: type: object properties: resource: type: string field: type: string code: type: string message: type: string nullable: true securitySchemes: github_pat: type: http scheme: bearer description: GitHub Personal Access Token PAT for authentication. The token should be provided in the Authorization header as a Bearer token. responses: NotFoundError: description: The requested resource was not found. content: application/json: schema: ref: ' /components/schemas/ErrorResponse' UnauthorizedError: description: Authentication failed or was not provided. Ensure a valid GitHub PAT is included in the Authorization header. content: application/json: schema: ref: ' /components/schemas/ErrorResponse' ForbiddenError: description: The authenticated user does not have permission to perform this action on the resource. content: application/json: schema: ref: ' /components/schemas/ErrorResponse' BadRequestError: description: The request was malformed or invalid. This can be due to missing required parameters or invalid JSON. content: application/json: schema: ref: ' /components/schemas/ErrorResponse' ConflictError: description: A conflict occurred, for example, when trying to update a file with an incorrect 'sha' or if the file has been changed since the 'sha' was obtained. content: application/json: schema: ref: ' /components/schemas/ErrorResponse' UnprocessableEntityError: description: The request was well-formed but was unable to be followed due to semantic errors e.g., validation errors in the request body . content: application/json: schema: ref: ' /components/schemas/ErrorResponse' security: - github_pat: paths: /repos/JEWONMOON/elr-root-manifest/contents/: Note the trailing slash for root get: summary: List root contents of elr-root-manifest description: Retrieves the list of files and directories in the root of the 'elr-root-manifest' repository. operationId: listElrRootManifestContents tags: - elr-root-manifest responses: '200': description: An array of files and directories in the root of 'elr-root-manifest'. content: application/json: schema: type: array items: ref: ' /components/schemas/GitHubContent' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' /repos/JEWONMOON/elr-root-manifest/contents/ path : get: summary: Get content from elr-root-manifest description: Retrieves the content of a file or a list of files and directories within a specific path in the 'elr-root-manifest' repository. If the path points to a file, its base64 encoded content will be included in the response. If the path points to a directory, an array of content metadata for items in that directory will be returned. operationId: getElrRootManifestContent tags: - elr-root-manifest parameters: - name: path in: path required: true description: The full path to the file or directory within the repository. Example: 'memory/confessions/my_confession.txt' or 'memory/logs/'. schema: type: string responses: '200': description: Successfully retrieved the content. content: application/json: schema: oneOf: - ref: ' /components/schemas/GitHubContent' If path is a file - type: array If path is a directory items: ref: ' /components/schemas/GitHubContent' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' put: summary: Create or update a file in elr-root-manifest description: Creates a new file or updates an existing file at the specified path in the 'elr-root-manifest' repository. operationId: createOrUpdateElrRootManifestFile tags: - elr-root-manifest parameters: - name: path in: path required: true description: The full path of the file to create or update. Example: 'memory/confessions/new_entry.txt'. schema: type: string requestBody: description: Information about the file to be created or updated, including the commit message and base64 encoded content. required: true content: application/json: schema: ref: ' /components/schemas/UpdateFileRequest' example: message: \"feat: Add new memory entry via API\" content: \"SGVsbG8gV29ybGQh\" \"Hello World!\" base64 encoded branch: \"main\" sha: \"optional_existing_file_sha_for_update\" responses: '200': description: File successfully updated. content: application/json: schema: ref: ' /components/schemas/CommitResponse' '201': description: File successfully created. content: application/json: schema: ref: ' /components/schemas/CommitResponse' '400': ref: ' /components/responses/BadRequestError' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' '409': ref: ' /components/responses/ConflictError' '422': ref: ' /components/responses/UnprocessableEntityError' /repos/JEWONMOON/eliar-digital-personhood/contents/: Note the trailing slash for root get: summary: List root contents of eliar-digital-personhood description: Retrieves the list of files and directories in the root of the 'eliar-digital-personhood' repository. operationId: listEliarDigitalPersonhoodContents tags: - eliar-digital-personhood responses: '200': description: An array of files and directories in the root of 'eliar-digital-personhood'. content: application/json: schema: type: array items: ref: ' /components/schemas/GitHubContent' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' /repos/JEWONMOON/eliar-digital-personhood/contents/ path : get: summary: Get content from eliar-digital-personhood description: Retrieves the content of a file or a list of files and directories within a specific path in the 'eliar-digital-personhood' repository. operationId: getEliarDigitalPersonhoodContent tags: - eliar-digital-personhood parameters: - name: path in: path required: true description: The full path to the file or directory within the repository. schema: type: string responses: '200': description: Successfully retrieved the content. content: application/json: schema: oneOf: - ref: ' /components/schemas/GitHubContent' If path is a file - type: array If path is a directory items: ref: ' /components/schemas/GitHubContent' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' put: summary: Create or update a file in eliar-digital-personhood description: Creates a new file or updates an existing file at the specified path in the 'eliar-digital-personhood' repository. operationId: createOrUpdateEliarDigitalPersonhoodFile tags: - eliar-digital-personhood parameters: - name: path in: path required: true description: The full path of the file to create or update. schema: type: string requestBody: description: Information about the file to be created or updated. required: true content: application/json: schema: ref: ' /components/schemas/UpdateFileRequest' responses: '200': description: File successfully updated. content: application/json: schema: ref: ' /components/schemas/CommitResponse' '201': description: File successfully created. content: application/json: schema: ref: ' /components/schemas/CommitResponse' '400': ref: ' /components/responses/BadRequestError' '401': ref: ' /components/responses/UnauthorizedError' '403': ref: ' /components/responses/ForbiddenError' '404': ref: ' /components/responses/NotFoundError' '409': ref: ' /components/responses/ConflictError' '422': ref: ' /components/responses/UnprocessableEntityError' tags: Optional: Group operations by repository - name: elr-root-manifest description: Operations related to the 'elr-root-manifest' repository. - name: eliar-digital-personhood description: Operations related to the 'eliar-digital-personhood' repository. -- 스키마 수정 부탁해 github 연동까지 하려고"
}